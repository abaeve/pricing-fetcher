// Automatically generated by MockGen. DO NOT EDIT!
// Source: eve_esi_interfaces.go

package fetching

import (
	esi "github.com/antihax/goesi/esi"
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	http "net/http"
)

// Mock of RegionsFetcher interface
type MockRegionsFetcher struct {
	ctrl     *gomock.Controller
	recorder *_MockRegionsFetcherRecorder
}

// Recorder for MockRegionsFetcher (not exported)
type _MockRegionsFetcherRecorder struct {
	mock *MockRegionsFetcher
}

func NewMockRegionsFetcher(ctrl *gomock.Controller) *MockRegionsFetcher {
	mock := &MockRegionsFetcher{ctrl: ctrl}
	mock.recorder = &_MockRegionsFetcherRecorder{mock}
	return mock
}

func (_m *MockRegionsFetcher) EXPECT() *_MockRegionsFetcherRecorder {
	return _m.recorder
}

func (_m *MockRegionsFetcher) GetUniverseRegions(ctx context.Context, opts *esi.GetUniverseRegionsOpts) ([]int32, *http.Response, error) {
	ret := _m.ctrl.Call(_m, "GetUniverseRegions", ctx, opts)
	ret0, _ := ret[0].([]int32)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockRegionsFetcherRecorder) GetUniverseRegions(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUniverseRegions", arg0, arg1)
}

func (_m *MockRegionsFetcher) GetUniverseRegionsRegionId(ctx context.Context, regionId int32, opts *esi.GetUniverseRegionsRegionIdOpts) (esi.GetUniverseRegionsRegionIdOk, *http.Response, error) {
	ret := _m.ctrl.Call(_m, "GetUniverseRegionsRegionId", ctx, regionId, opts)
	ret0, _ := ret[0].(esi.GetUniverseRegionsRegionIdOk)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockRegionsFetcherRecorder) GetUniverseRegionsRegionId(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUniverseRegionsRegionId", arg0, arg1, arg2)
}

// Mock of OrderFetcher interface
type MockOrderFetcher struct {
	ctrl     *gomock.Controller
	recorder *_MockOrderFetcherRecorder
}

// Recorder for MockOrderFetcher (not exported)
type _MockOrderFetcherRecorder struct {
	mock *MockOrderFetcher
}

func NewMockOrderFetcher(ctrl *gomock.Controller) *MockOrderFetcher {
	mock := &MockOrderFetcher{ctrl: ctrl}
	mock.recorder = &_MockOrderFetcherRecorder{mock}
	return mock
}

func (_m *MockOrderFetcher) EXPECT() *_MockOrderFetcherRecorder {
	return _m.recorder
}

func (_m *MockOrderFetcher) GetMarketsRegionIdOrders(ctx context.Context, orderType string, regionId int32, localVarOptionals *esi.GetMarketsRegionIdOrdersOpts) ([]esi.GetMarketsRegionIdOrders200Ok, *http.Response, error) {
	ret := _m.ctrl.Call(_m, "GetMarketsRegionIdOrders", ctx, orderType, regionId, localVarOptionals)
	ret0, _ := ret[0].([]esi.GetMarketsRegionIdOrders200Ok)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockOrderFetcherRecorder) GetMarketsRegionIdOrders(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMarketsRegionIdOrders", arg0, arg1, arg2, arg3)
}

// Mock of HistoryFetcher interface
type MockHistoryFetcher struct {
	ctrl     *gomock.Controller
	recorder *_MockHistoryFetcherRecorder
}

// Recorder for MockHistoryFetcher (not exported)
type _MockHistoryFetcherRecorder struct {
	mock *MockHistoryFetcher
}

func NewMockHistoryFetcher(ctrl *gomock.Controller) *MockHistoryFetcher {
	mock := &MockHistoryFetcher{ctrl: ctrl}
	mock.recorder = &_MockHistoryFetcherRecorder{mock}
	return mock
}

func (_m *MockHistoryFetcher) EXPECT() *_MockHistoryFetcherRecorder {
	return _m.recorder
}

func (_m *MockHistoryFetcher) GetMarketsRegionIdHistory(ctx context.Context, regionId int32, typeId int32, localVarOptionals *esi.GetMarketsRegionIdHistoryOpts) ([]esi.GetMarketsRegionIdHistory200Ok, *http.Response, error) {
	ret := _m.ctrl.Call(_m, "GetMarketsRegionIdHistory", ctx, regionId, typeId, localVarOptionals)
	ret0, _ := ret[0].([]esi.GetMarketsRegionIdHistory200Ok)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockHistoryFetcherRecorder) GetMarketsRegionIdHistory(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMarketsRegionIdHistory", arg0, arg1, arg2, arg3)
}
